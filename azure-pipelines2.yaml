trigger:
- main

variables:
  - name: imageName
    value: 'VivaImage'
  - name: containerRegistry
    value: 'VivaWalletProjects'
  - name: repository
    value: 'vivawalletproject'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Installing required packages"
        pip install -r deployments/requirements.txt
    - script: |
        echo "Running test services"
        python -m unittest discover -p 'tests/test_*.py' -v
    - script: |
        echo "Building the Docker image"
        docker build -t $(imageName) .
        echo "Running unit tests"
        python -m unittest src/main.py
      displayName: 'Build and Test'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'test-results.xml'
    - task: Docker@2
      inputs:
        command: 'build'
        containerRegistry: '$(containerRegistry)'
        repository: '$(repository)'
        tags: '$(Build.BuildId)'
        Dockerfile: 'deployments/Dockerfile'
    - task: Docker@2
      inputs:
        command: 'push'
        containerRegistry: '$(containerRegistry)'
        repository: '$(repository)'
        tags: '$(Build.BuildId)'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            inputs:
              command: 'apply'
              namespace: 'default'
              yaml: |
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: vivawalletproject-deployment
                spec:
                  replicas: 3
                  selector:
                    matchLabels:
                      app: vivawalletproject
                  template:
                    metadata:
                      labels:
                        app: vivawalletproject
                    spec:
                      containers:
                      - name: vivawalletproject
                        image: '$(containerRegistry)/$(repository):$(Build.BuildId)'
                        ports:
                        - containerPort: 80
          - task: Kubernetes@1
            inputs:
              command: 'apply'
              namespace: 'default'
              yaml: |
                apiVersion: v1
                kind: Service
                metadata:
                  name: vivawalletproject-service
                spec:
                  selector:
                    app: vivawalletproject
                  ports:
                  - name: http
                    port: 80
                    targetPort: 80